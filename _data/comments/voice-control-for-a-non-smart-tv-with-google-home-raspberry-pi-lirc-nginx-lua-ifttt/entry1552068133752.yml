_id: 4369896752
_parent: https://chester.me/archives/2017/12/voice-control-for-a-non-smart-tv-with-google-home-raspberry-pi-lirc-nginx-lua-ifttt/
replying_to_uid: '4368165038'
message: '<p>So I started from scratch again with a fresh install of Rasbian Stretch.  I made some modifications to the /etc/nginx/sites-allowed/my.domain file to streamline things as per the self-cert guide referenced.  It now reads:</p><p><code><br>server {<br>    listen 80;<br>    listen [::]:80;<br>    server_name my.domain;<br>    return 301 https://$server_name$request_uri;<br>}<br><br>server {<br><br>    #SSL configuration<br><br>    listen 443 ssl;<br>    listen [::]:443 ssl;<br>    server_name my.domain;<br>    include snippets/self-signed.conf;<br>    include snippets/ssl-params.conf;<br><br>    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)<br>    add_header Strict-Transport-Security max-age=15768000;<br><br>    if ($request_method !~ ^(GET|HEAD|PUT|PATCH|POST|DELETE|OPTIONS)$ ){<br>    return 405;<br>}<br><br>location /remote {<br>  lua_need_request_body on;<br>  content_by_lua_block {<br>    local args, err = ngx.req.get_post_args()<br>    if not args then<br>      return<br>    end<br>    if args["secret-key"] ~= "some_generated_secret" then<br>      return<br>    end<br>    if args["action"] == "tv_power" then<br>      os.execute("irsend SEND_ONCE Samsung_BN59-01175N KEY_POWER");<br>...<br>    elseif args["action"] == "tv_volume_up" then<br>      os.execute("irsend SEND_ONCE Samsung_BN59-01175N KEY_VOLUMEUP");<br>...<br>    end<br>     }<br>  }<br>}</code></p><p>And I am able to access https://my.domain on my local network and externally with the generic message from nginx</p><p></p><blockquote>If you see this page, the nginx web server is successfully installed and working. Further configuration is required.<br><br>For online documentation and support please refer to <a href="http://nginx.org" rel="nofollow noopener" title="nginx.org">nginx.org</a>.<br>Commercial support is available at <a href="http://nginx.com" rel="nofollow noopener" title="nginx.com">nginx.com</a>.<br><br>Thank you for using nginx.</blockquote><p></p><p>If I navigate to https://my.domain/remote then the browser downloads a file called "remote".  The same also happened when I tried your suggestion of something simple like:</p><p><code><br>location /remote {<br>content_by_lua_block {<br>os.execute("/bin/bash -c ''echo hello &gt;&gt; /tmp/lua_out''");<br>}<br>}<br></code></p><p>I ran <code> curl -k --verbose "secret-key=some_generated_secret&amp;action=tv_power" https://my.domain/remote </code> and received the response:</p><p></p><blockquote><br>* Rebuilt URL to: secret-key=some_generated_secret&amp;action=tv_power/<br>* Could not resolve host: secret-key=some_generated_secret&amp;action=tv_power<br>* Closing connection 0<br>curl: (6) Could not resolve host: secret-key=some_generated_secret&amp;action=tv_power<br>*   Trying (domain IP)...<br>* TCP_NODELAY set<br>* Connected to my.domain (IP address) port 443 (#1)<br>* ALPN, offering h2<br>* ALPN, offering http/1.1<br>* Cipher selection: ALL:!EXPORT:!EXPORT40:!EXPORT56:!aNULL:!LOW:!RC4:@STRENGTH<br>* successfully set certificate verify locations:<br>*   CAfile: /etc/ssl/certs/ca-certificates.crt<br>  CApath: /etc/ssl/certs<br>* TLSv1.2 (OUT), TLS header, Certificate Status (22):<br>* TLSv1.2 (OUT), TLS handshake, Client hello (1):<br>* TLSv1.2 (IN), TLS handshake, Server hello (2):<br>* TLSv1.2 (IN), TLS handshake, Certificate (11):<br>* TLSv1.2 (IN), TLS handshake, Server key exchange (12):<br>* TLSv1.2 (IN), TLS handshake, Server finished (14):<br>* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):<br>* TLSv1.2 (OUT), TLS change cipher, Client hello (1):<br>* TLSv1.2 (OUT), TLS handshake, Finished (20):<br>* TLSv1.2 (IN), TLS change cipher, Client hello (1):<br>* TLSv1.2 (IN), TLS handshake, Finished (20):<br>* SSL connection using TLSv1.2 / ECDHE-RSA-AES256-GCM-SHA384<br>* ALPN, server accepted to use http/1.1<br>* Server certificate:<br>*  subject: C=**; ST=***; L=***; O=***; OU=***; CN=my.domain; emailAddress=***<br>*  start date: Mar  8 16:04:04 2019 GMT<br>*  expire date: Mar  7 16:04:04 2020 GMT<br>*  issuer: C=***; ST=***; L=***; O=***; OU=***; CN=my.domain; emailAddress=****<br>*  SSL certificate verify result: self signed certificate (18), continuing anyway.<br>&gt; GET /remote HTTP/1.1<br>&gt; Host: my.domain<br>&gt; User-Agent: curl/7.52.1<br>&gt; Accept: */*<br>&gt; <br>&lt; HTTP/1.1 200 OK<br>&lt; Server: nginx/1.10.3<br>&lt; Date: Fri, 08 Mar 2019 17:34:05 GMT<br>&lt; Content-Type: application/octet-stream<br>&lt; Transfer-Encoding: chunked<br>&lt; Connection: keep-alive<br>&lt; Strict-Transport-Security: max-age=63072000; includeSubdomains<br>&lt; X-Frame-Options: DENY<br>&lt; X-Content-Type-Options: nosniff<br>&lt; <br>* Curl_http_done: called premature == 0<br>* Connection #1 to host my.domain left intact<br></blockquote><p></p><p>The only thing I can think of is that nginx isn''t triggering the lua interpreter, but I''m really stumped as to how I could fix this.</p><p>Apologies for the MASSIVE post, just wanted to include all of the info!</p><p>Cheers,</p><p>Dan</p>'
name: 'dantheman1988'
email: '25a78ea6c2a131bddaa2ab46486bbfb0'
hp: ''
date: 1552068133
            